# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-ResNet50 object detection model with P3-P5 outputs.

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  s: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, ResNetLayer, [3, 64, 1, True, 1,]] # 0-P1/4
  - [-1, 1, ResNetLayer, [64, 64, 1, False, 1]] # 1-P2/4      out:128
  - [-1, 1, ResNetLayer, [256, 64, 2, False, 1]] # 2-P3/8     out:256
  - [-1, 1, ResNetLayer, [256, 64, 2, False, 1]] # 3-P4/16    out:256
  - [-1, 1, ResNetLayer, [256, 64, 2, False, 1]] # 4-P5/32    out:256

head:
  - [-1, 1, Conv, [128, 1, 1, None, 1, 1, False]] # 5
  - [-1, 1, AIFI, [256, 2]]
  - [-1, 1, Conv, [128, 1, 1]] # 7

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [3, 1, Conv, [128, 1, 1, None, 1, 1, False]] # 9
  - [[-2, -1], 1, Concat, [1]]
  - [-1, 3, RepC3, [128, 1]] # 11
  - [-1, 1, Conv, [128, 1, 1]] # 12

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [2, 1, Conv, [128, 1, 1, None, 1, 1, False]] # 14
  - [[-2, -1], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, RepC3, [128, 1]] # X3 (16), fpn_blocks.1

  - [-1, 1, Conv, [128, 3, 2]] # 17, downsample_convs.0
  - [[-1, 12], 1, Concat, [1]] # cat Y4
  - [-1, 3, RepC3, [128, 1]] # F4 (19), pan_blocks.0

  - [-1, 1, Conv, [128, 3, 2]] # 20, downsample_convs.1
  - [[-1, 7], 1, Concat, [1]] # cat Y5
  - [-1, 3, RepC3, [128, 1]] # F5 (22), pan_blocks.1

  - [[19], 1, DETRDecoder, [nc, 128, 9, 4, 4, 3, 256, True, False]] # Detect(P3, P4, P5)
        
        # nc=80,
        # ---- ch=(512, 1024, 2048) --- automatically set
        # hd=256,  # hidden dim
        # nq=300,  # num queries
        # ndp=4,  # num decoder points
        # nh=8,  # num head
        # ndl=6,  # num decoder layers
        # d_ffn=1024,  # dim of feedforward
        # use_anchor=True,
        # use_deformable=True,